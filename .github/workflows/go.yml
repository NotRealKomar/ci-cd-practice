# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-cd-practice

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches:
      - '**'

jobs:

  build:
    runs-on: ubuntu-22.04
    steps:
    - id: go-cache-paths
      run: [
        echo "name=go-build::$(go env GOCACHE)" >> $GITHUB_OUTPUT
        echo "name=go-mod::$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
      ]
        
    - name: Checkout
      uses: actions/checkout@v3.3.0

    - name: Go Build Cache
      uses: actions/cache@v3.2.4
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

    - name: Go Mod Cache
      uses: actions/cache@v3.2.4
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  deploy-develop:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/develop'
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Deploy to Heroku
        uses: gonuit/heroku-docker-deploy@v1.3.2
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          dockerfile_directory: ./
          dockerfile_name: Dockerfile
          docker_options: ""
          process_type: web
